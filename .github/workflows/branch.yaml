name: Push
on: [push]

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.10']
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        run: pip install uv

      - name: Create uv virtual environment
        run: uv venv

      - name: Install dependencies
        run: uv pip install -e .[dev]

      - name: Run tests
        run: uv run pytest --cov=./ --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  code-quality:
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.10']
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        run: pip install uv

      - name: Create uv virtual environment
        run: uv venv

      - name: Install dependencies
        run: uv pip install -e .[dev]
      
      - name: Install dependencies
        run: uv pip install -e .[dev]

      - name: Install dependencies
        run: uv pip install -e .[dev]

      - name: Install dependencies
        run: uv pip install -e .[dev]

      - name: Install dependencies
        run: uv pip install -e .[dev]

      - name: Run isort
        run: uv run isort spatialproteomics --check-only --profile black --skip .venv --skip data --skip build --skip dist

      - name: Run black
        run: uv run black spatialproteomics --check

      - name: Run flake8
        run: uv run flake8 spatialproteomics tests --exclude .venv,data,build,dist

      - name: Run bandit
        run: uv run bandit spatialproteomics

  docs:
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.10']
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        run: pip install uv

      - name: Create uv virtual environment
        run: uv venv

      - name: Install dependencies
        run: uv pip install -e .[dev]

      - name: Install dependencies
        run: uv pip install -e .[dev]

      - name: Install dependencies
        run: uv pip install -e .[dev]

      - name: Install docs dependencies
        run: uv pip install -e .[docs]

      - name: Install Pandoc
        run: sudo apt-get install -y pandoc

      - name: Build docs
        run: |
          mkdir -p gh-pages
          touch gh-pages/.nojekyll
          cd docs/
          uv run sphinx-build -b html . _build
          cp -r _build/* ../gh-pages/

      - name: Deploy documentation
        if: ${{ github.event_name == 'push' }}
        uses: JamesIves/github-pages-deploy-action@4.1.4
        with:
          branch: gh-pages
          folder: gh-pages
